version: "3"
services:
  frontend:
    # 개발 환경을 위한 도커파일이 위치한 경로를 알려줌
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    container_name: app_frontend
    # 볼륨을 설정
    volumes:
      - /app/node_modules
      - ./frontend:/app
    # 리액트 애플리케이션에서 발생하는 버그를 해결
    stdin_open: true

  nginx:
    # 재시작 정책: 컨테이너가 멈추면 항상 다시 시작.
    # Nginx 가 멈추면 어떠한 요청도 서버에 도달하지 않으므로 Nginx 컨테이너는 항상 살아있어야함
    restart: always
    # Nginx 서비스를 위한 개발 환경의 도커 파일이 어디에 있는지 명
    build:
      dockerfile: Dockerfile
      context: ./nginx
    # 포트 매핑 - 로컬(3000):컨테이너(80) 매핑
    ports:
      - "3000:80"

  backend:
    build:
      dockerfile: Dockerfile.dev
      context: ./backend
    container_name: app_backend
    volumes:
      - /app/node_modules
      - ./backend:/app
    environment:
      MYSQL_ROOT_PASSWORD: qwer1234
      MYSQL_DATABASE: myapp
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PORT: 3306

#  mysql:
#    build: ./mysql
#    restart: unless-stopped
#    container_name: app_mysql
#    ports:
#      - "3306:3306"
#    volumes:
#      - ./mysql/mysql_data:/var/lib/mysql
#      - ./mysql/sqls/:/docker-entrypoint-initdb.d/
#    # MySQL 의 루트 계정 비밀번호와 데이터베이스의 이름을 지정
#    environment:
#      MYSQL_ROOT_PASSWORD: qwer1234
#      MYSQL_DATABASE: myapp
